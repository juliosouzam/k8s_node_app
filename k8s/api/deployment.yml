apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-app
  template:
    metadata:
      labels:
        app: api-app
    spec:
      initContainers:
        - name: init-pod
          image: busybox:1.28
          command:
            [
              "sh",
              "-c",
              "until nslookup mongo-service.default.svc.cluster.local; do echo 'waiting for mongodb'; sleep 2; done",
            ]
      containers:
        - name: my-api
          image: juliocesar/app:main
          imagePullPolicy: Always

          startupProbe:
            httpGet:
              path: /healthcheck
              port: 3000 # must be the port of container
              scheme: HTTP
            periodSeconds: 10
            failureThreshold: 3

          livenessProbe:
            httpGet:
              path: /healthcheck # should be different liveness and readiness
              port: 3000 # must be the port of container
              scheme: HTTP
            initialDelaySeconds: 10 # seconds to wait for the application to be up
            periodSeconds: 10 #
            timeoutSeconds: 2 # timeout in seconds
            failureThreshold: 2 # quantity of failures
            successThreshold: 1 # quantity of successes

          readinessProbe:
            httpGet:
              path: /healthcheck # should be different liveness and readiness
              port: 3000 # must be the port of container
              scheme: HTTP

          env:
            - name: MONGO_HOST
              value: mongo-service
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_DATABASE
              value: users
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 400m
              memory: 256Mi
          ports:
            - containerPort: 3000
              name: http
          # - containerPort: 443
          #   name: https
